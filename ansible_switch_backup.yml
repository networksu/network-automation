---
# Playbook: switch_backup.yml
# Description: Backs up switch configurations directly to GitHub
# For use with containerized AWX without persistent volumes

- name: Backup Network Switch Configurations
  hosts: switch_stack_B_A
  gather_facts: false
  vars:
    # Temporary backup path inside container (will be lost after container restart)
    temp_backup_path: "/tmp/switch_backups"
    # Path within repository where configs should be stored
    repo_subpath: "kantra/building_A/stack"

  tasks:
    - name: Create temporary backup directory
      file:
        path: "{{ temp_backup_path }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true
      become: yes

    - name: Backup Cisco IOS switch configurations
      ios_config:
        backup: yes
        backup_options:
          filename: "{{ inventory_hostname }}.cfg"
          dir_path: "{{ temp_backup_path }}"
      register: backup_results

    - name: Clone repository to get full history
      shell: |
        cd /tmp
        rm -rf repo_clone
        git clone https://salwan.mohamed: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@github.com/networksu/su_network_backup.git repo_clone
        mkdir -p /tmp/repo_clone/{{ repo_subpath }}
      delegate_to: localhost
      run_once: true
      become: yes
      ignore_errors: yes

    - name: Copy configs to repository structure
      shell: |
        cp {{ temp_backup_path }}/*.cfg /tmp/repo_clone/{{ repo_subpath }}/
      delegate_to: localhost
      run_once: true
      become: yes
      ignore_errors: yes

    - name: Create README with list of switches
      shell: |
        cd /tmp/repo_clone/{{ repo_subpath }}
        echo "# Switch Configuration Backups" > README.md
        echo "" >> README.md
        echo "Last updated: $(date)" >> README.md
        echo "" >> README.md
        echo "## Switches included:" >> README.md
        echo "" >> README.md
        for cfg in $(find . -name "*.cfg" | sort); do
          basename=$(basename "$cfg" .cfg)
          echo "- $basename" >> README.md
        done
      delegate_to: localhost
      run_once: true
      become: yes
      ignore_errors: yes

    - name: Commit and push to GitHub
      shell: |
        cd /tmp/repo_clone
        git config user.name "salwan.mohamed"
        git config user.email "salwan.mohamed@su.edu.eg"
        git add -A
        git commit -m "Switch configurations - $(date +%Y%m%d_%H%M%S)"
        git push
      delegate_to: localhost
      run_once: true
      become: yes
      register: git_result
      ignore_errors: yes
      
    - name: Display Git push result
      debug:
        var: git_result.stdout_lines
      run_once: true
