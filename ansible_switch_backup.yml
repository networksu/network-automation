---
# Playbook: switch_backup.yml
# Description: Automates switch configuration backups, moves files to a persistent location, and pushes to GitHub.

- name: Backup Network Switch Configurations
  hosts: switch_stack_B_A
  gather_facts: false
  vars:
    temp_backup_path: "/tmp/switch_backups"
    host_backup_path: "/var/lib/awx/projects/switch_backups/kantra/building_A/stack"

  tasks:
    - name: Ensure temporary backup directory exists
      file:
        path: "{{ temp_backup_path }}"
        state: directory
        mode: '0755'
      become: yes

    - name: Ensure persistent host backup directory exists
      file:
        path: "{{ host_backup_path }}"
        state: directory
        mode: '0777'  # Full access to avoid permission issues
      delegate_to: localhost
      run_once: true
      become: yes

    - name: Backup Cisco IOS switch configurations
      ios_config:
        backup: yes
        backup_options:
          filename: "{{ inventory_hostname }}.cfg"
          dir_path: "{{ temp_backup_path }}"
      register: backup_results

    - name: Display backup path
      debug:
        msg: "Backup saved to: {{ backup_results.backup_path }}"
      when: backup_results is defined

    - name: Copy backup files to persistent storage
      shell: |
        cp -r {{ temp_backup_path }}/* {{ host_backup_path }}/
        chmod -R 777 {{ host_backup_path }}
      delegate_to: localhost
      become: yes

    - name: Verify copied files in persistent directory
      shell: "ls -la {{ host_backup_path }}"
      delegate_to: localhost
      register: dir_contents
      become: yes

    - name: Display host backup directory contents
      debug:
        var: dir_contents.stdout_lines

    # Git operations
    - name: Ensure GitHub push script exists
      copy:
        dest: "/var/lib/awx/projects/push_configs.sh"
        mode: '0755'
        content: |
          #!/bin/bash
          # GitHub push script

          BACKUP_PATH="/var/lib/awx/projects/switch_backups/kantra/building_A/stack"
          GIT_USER="your_github_username"
          GIT_REPO="networksu/su_network_backup"

          log() {
            echo "$1"
          }

          log "Changing to backup directory: $BACKUP_PATH"
          cd $BACKUP_PATH || exit 1

          log "Setting up Git..."
          git init
          git config user.name "$GIT_USER"
          git config user.email "your_email@example.com"
          git remote add origin git@github.com:$GIT_USER/$GIT_REPO.git

          log "Adding files..."
          git add -A
          git commit -m "Automated backup - $(date +%Y%m%d_%H%M%S)"

          log "Pushing to GitHub..."
          git push -f origin main

          log "Backup and push completed."

      delegate_to: localhost
      become: yes

    - name: Run GitHub push script
      shell: "/var/lib/awx/projects/push_configs.sh"
      delegate_to: localhost
      register: git_result
      become: yes

    - name: Display Git push output
      debug:
        var: git_result.stdout_lines
