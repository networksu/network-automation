---
# Playbook: switch_backup.yml
# Description: Backs up switch configurations and pushes them to GitHub

- name: Backup Network Switch Configurations
  hosts: switch_stack_B_A
  gather_facts: false
  vars:
    temp_backup_path: "/tmp/switch_backups"
    host_backup_path: "/var/lib/awx/projects/switch_backups"

  tasks:
    - name: Ensure temporary backup directory exists
      file:
        path: "{{ temp_backup_path }}"
        state: directory
        mode: '0755'
      delegate_to: localhost
      run_once: true
      become: yes

    - name: Ensure persistent host backup directory exists
      file:
        path: "{{ host_backup_path }}"
        state: directory
        mode: '0777'
      delegate_to: localhost
      run_once: true
      become: yes

    - name: Backup Cisco IOS switch configurations
      ios_config:
        backup: yes
        backup_options:
          filename: "{{ inventory_hostname }}.cfg"
          dir_path: "{{ temp_backup_path }}"
      register: backup_results

    - name: Copy backup files to persistent storage
      copy:
        src: "{{ temp_backup_path }}/{{ inventory_hostname }}.cfg"
        dest: "{{ host_backup_path }}/{{ inventory_hostname }}.cfg"
        mode: '0644'
        remote_src: yes
      delegate_to: localhost
      become: yes
      when: backup_results is defined and backup_results.backup_path is defined

    - name: Verify backup files exist in persistent storage
      stat:
        path: "{{ host_backup_path }}/{{ inventory_hostname }}.cfg"
      delegate_to: localhost
      register: backup_file_status
      become: yes

    - name: Fail if no backup files were found
      fail:
        msg: "No backup files found in {{ host_backup_path }}"
      when: not backup_file_status.stat.exists

    - name: Create GitHub push script
      copy:
        dest: "/var/lib/awx/projects/push_configs.sh"
        mode: '0755'
        content: |
          #!/bin/bash
          BACKUP_PATH="/var/lib/awx/projects/switch_backups"
          GIT_USER="salwan.mohamed"
          GIT_EMAIL="salwan.mohamed@su.edu.eg"
          GIT_REPO="networksu/su_network_backup"
          GIT_BRANCH="main"
          LOG_FILE="/var/lib/awx/projects/github_push.log"

          echo "==== Starting GitHub push script ====" > $LOG_FILE
          echo "Current directory: $(pwd)" >> $LOG_FILE

          cd $BACKUP_PATH || exit 1

          if [ ! -d ".git" ]; then
            echo "Initializing new Git repository..." >> $LOG_FILE
            git init
            git config user.name "$GIT_USER"
            git config user.email "$GIT_EMAIL"
            git remote add origin "https://$GIT_USER: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@github.com/$GIT_REPO.git"
          fi

          echo "Adding all backup files to Git..." >> $LOG_FILE
          git add -A

          echo "Committing changes..." >> $LOG_FILE
          git commit -m "Updated switch backup configurations $(date)" || echo "No changes to commit" >> $LOG_FILE

          echo "Fetching latest from GitHub..." >> $LOG_FILE
          git fetch origin $GIT_BRANCH

          echo "Merging remote changes..." >> $LOG_FILE
          git pull origin $GIT_BRANCH --no-edit

          echo "Pushing changes to GitHub..." >> $LOG_FILE
          git push -u origin $GIT_BRANCH --force || echo "Push failed!" >> $LOG_FILE

          echo "==== GitHub push completed ====" >> $LOG_FILE
      delegate_to: localhost
      run_once: true
      become: yes

    - name: Run GitHub push script
      shell: "/var/lib/awx/projects/push_configs.sh"
      delegate_to: localhost
      run_once: true
      become: yes

    - name: Show push script log if exists
      shell: "cat /var/lib/awx/projects/github_push.log || echo 'Log file not found'"
      delegate_to: localhost
      run_once: true
      register: git_log
      become: yes
      ignore_errors: yes

    - name: Display GitHub push log
      debug:
        var: git_log.stdout_lines
      run_once: true
